using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        double total=0.0d;  //总价
        private void button1_Click(object sender, EventArgs e)
        {
             CashContext cc=null;
            string str=comboBox1.SelectedItem.ToString();
                switch(str){
                    case"正常收费":
                        cc=new CashContext(new CashNormal());
                        break;
                    case "满300返100":
                        cc=new CashContext(new CashReturn("300","100"));
                        break;
                    case "打8折":
                        cc=new CashContext(new CashRebate("0.8"));
                        break;
                }
                double totalPrices=0d;
                totalPrices=cc.GetResult(Convert.ToDouble(textBox1.Text)*Convert.ToDouble(textBox2.Text));
                total=total+totalPrices;
                listBox1.Items.Add("单价："+textBox1.Text+"数量："+textBox2.Text+" "+listBox1.SelectedItem+"合计："+ total.ToString());
                listBox1.Text=total.ToString();
            }
        }
        }
    abstract class CashSuper
    {  //现金收取超类的抽象方法，收取现金，参数为原价，返回为当前价
        public abstract double acceptCash(double money);
    }
    class CashNormal : CashSuper
    {  //正常收费，原价返回
        public override double acceptCash(double money)
        {
            return money;
        }
    }
    class CashRebate : CashSuper
    {
        public double moneyRebate = 1d;
        public CashRebate(string moneyRebate)
        {  //打折收费，初始化时，必须要输入折扣率，如八折，就是0.8
            this.moneyRebate = double.Parse(moneyRebate);
        }
        public override double acceptCash(double money)
        {
            return money * moneyRebate;
        }
    }
    class CashReturn : CashSuper
    {
        private double moneyCondition = 0.0d;
        private double moneyReturn = 0.0d;
        public CashReturn(string moneyCondition, string moneyReturn)
        {  //返利收费，初始化时必须输入返利条件和返利值，比如满300返100，则moneyCondition为300，moneyReturn为100；
            this.moneyCondition = double.Parse(moneyCondition);
            this.moneyReturn = double.Parse(moneyReturn);
        }
        public override double acceptCash(double money)
        {
            double result = money;
            if (money >= moneyCondition)
                result = money - Math.Floor(money / moneyCondition) * moneyReturn;  //若大于返利条件，则需要减去返利值
            return result;
        }
    }
    class CashContext
    {
        private CashSuper cs;  //声明一个CashSuper对象
        public CashContext(CashSuper csuper)
        { //通过构造方法，传入具体的收费策略；
            this.cs = csuper;
        }
        public double GetResult(double money)
        {
            return cs.acceptCash(money);
        }
    }

