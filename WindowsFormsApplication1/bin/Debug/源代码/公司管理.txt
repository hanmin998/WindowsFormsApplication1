using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Collections;

namespace ConsoleApplication2
{
    class Program
    {
        static void Main(string[] args)
        {
            Company root = new ConcreteCompany("北京总公司");
            root.Add(new HRDepartment("总公司人力资源部"));
            root.Add(new FinanceDepartment("总公司财务部"));
            Company comp = new ConcreteCompany("上海华东分公司");
            comp.Add(new HRDepartment("华东分公司人力资源部"));
            comp.Add(new FinanceDepartment("华东分公司财务部"));
            root.Add(comp);
            ConcreteCompany comp1 = new ConcreteCompany("南京办事处");
            comp1.Add(new HRDepartment("南京办事处人力资源部"));
            comp1.Add(new FinanceDepartment("南京办事处财务部"));
            comp.Add(comp1);
            ConcreteCompany comp2 = new ConcreteCompany("杭州办事处");
            comp2.Add(new HRDepartment("杭州办事处人力资源部"));
            comp2.Add(new FinanceDepartment("杭州办事处财务部"));
            comp.Add(comp2);
            Console.WriteLine("\n结构图：");
            root.Display(1);
            Console.WriteLine("\n职责：");
            root.LineOfDuty();
            Console.Read();
        }
    }
    //公司类
    abstract class Company {
        protected string name;
        public Company(string name) {
            this.name = name;
        }
        public abstract void Add(Company c);
        public abstract void Remove(Company c);
        public abstract void Display(int depth);
        public abstract void LineOfDuty();
    }
    //具体公司类
    class ConcreteCompany : Company { 
        private List<Company>children=new List<Company>();
        public ConcreteCompany(string name):base(name){}
        public override void  Add(Company c){
 	        children.Add(c);
        }
        public override void  Remove(Company c){
 	        children.Remove(c);
        }
        public override void Display(int depth)
        {
            Console.WriteLine(new String('-',depth)+name);
            foreach(Company component in children){
                component.Display(depth+2);
            }
        }
        //履行职责
        public override void LineOfDuty()
        {
            foreach(Company component in children){
                component.LineOfDuty();
            }
        }
    }
    //人力资源部
    class HRDepartment:Company{
        public HRDepartment(string name):base(name){}
        public override void  Add(Company c){}
        public override void  Remove(Company c){}
        public override void Display(int depth)
        {
            Console.WriteLine(new String('-',depth)+name);
        }
        public override void  LineOfDuty(){
 	        Console.WriteLine("{0}员工招聘培训管理",name);
        }
    }
    //财务部
    class FinanceDepartment:Company{
        public FinanceDepartment(string name):base(name){}
        public override void  Add(Company c){}
        public override void  Remove(Company c){}
        public override void Display(int depth)
        {
            Console.WriteLine(new String('-',depth)+name);
        }
        public override void  LineOfDuty(){
 	        Console.WriteLine("{0}公司财务收支管理",name);
        }
    }
}
