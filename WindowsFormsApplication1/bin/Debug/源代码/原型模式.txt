abstract class Prototype{
    private string id;
    public Prototype(string id){
        this.id = id;
    }
    public string Id{
        get{ return id; }
    }
    abstract public Prototype Clone();
}
class ConcretePrototype1 : Prototype{
    //Constructors
public ConcretePrototype(string id ) : base(id){}
       // Methods 
         override public Prototype Clone(){
       // Shallow copy
       return (Prototype)this.MemberwiseClone();
    }
}
class ConcretePrototype2 : Prototype{
    //Constructors
    public ConcretePrototype2(string id ) : base(id){}
       // Methods
       override public Prototype Clone(){
       // Shallow copy
       return (Prototype)this.MemberwiseClone();
    }
}
class Client{
   public static void Main( string[] args ) { 
   // Create two instances and clone each 
   ConcretePrototype1 p1 = new ConcretePrototype("I");
        ConcretePrototype1 c1 = (ConcretePrototype1)p1.Clone();
    Console.WriteLine( "Cloned: {0}", c1.Id );
    ConcretePrototype2 p2 = new ConcretePrototype2( "II" );
    ConcretePrototype2 c2 = (ConcretePrototype2)p2.Clone();
    Console.WriteLine( "Cloned: {0}", c2.Id ); 
} 
}