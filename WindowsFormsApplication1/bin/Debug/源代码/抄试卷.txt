using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication2
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("学生甲抄的试卷：");
            TestPaper studentA = new TestPaperA();  //将子类变量的声明改成了父类，利用了多态性，实现了代码重用
            studentA.TestQuestion1();
            studentA.TestQuestion2();
            studentA.TestQuestion3();
            Console.WriteLine("学生乙抄的试卷：");
            TestPaper studentB = new TestPaperB();
            studentB.TestQuestion1();
            studentB.TestQuestion2();
            studentB.TestQuestion3();
            Console.Read();
        }
    }
    class TestPaper {
        public void TestQuestion1() {
            Console.WriteLine("杨过得到，后来给了郭靖，练成倚天剑、屠龙刀的玄铁可能是【】a.球磨铸铁b.马口铁c.高速合金钢d.碳素纤维");
            Console.WriteLine("答案："+Answer1());  //虚方法
        }
        protected virtual string Answer1(){  //此方法的目的就是给继承的子类重写，因为这里每个人的答案都是不同的；
            return "";
        }
        public void TestQuestion2() {
            Console.WriteLine("杨过、程英、陆无双铲除了情花，造成【】a.是这种植物不在害人b.使一种珍稀物种灭绝c.破坏了那个生物圈的生态平衡d.造成该地区沙漠化");
            Console.WriteLine("答案："+Answer2());
        }
        protected virtual string Answer2(){
            return "";
        }
        public void TestQuestion3() {
            Console.WriteLine("蓝凤凰致使华山师徒、桃谷六仙呕吐不止，如果你是大夫，会给他们开什么药【】a.阿司匹林b.牛黄解毒片c.氟哌酸d.让他们喝大量的生牛奶e.以上全不对");
            Console.WriteLine("答案："+Answer3());
        }
        protected virtual string Answer3(){
            return "";
        }
    }
    class TestPaperA : TestPaper
    {
        protected override string Answer1()
        {
            return "b";
        }
        protected override string Answer2()
        {
            return "c";
        }
        protected override string Answer3()
        {
            return "a";
        }
    }
    class TestPaperB : TestPaper {
        protected override string Answer1()
        {
            return "c";
        }
        protected override string Answer2()
        {
            return "a";
        }
        protected override string Answer3()
        {
            return "a";
        }
    }
}
