    建造者模式：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
    本质：分离整体构建算法和部件构造。
    建造者（Builder）角色：定义创建一个Product对象所需的各个部件的操作。具体建造者（Concrete Builder）角色：实现Builder角色提供的接口，一步一步完成创建产品实例的过程。 在建造过程完成后，提供产品的实例。指导者（Director）角色：主要用来使用Builder接口，以一个统一的过程来构建所需要的Product对象产品（Product）角色：产品便是建造中的复杂对象。指导者角色是与客户端打交道的角色。指导者角色将客户端创建产品的请求划分为对各个零件的建造请求，再将这些请求委派给具体建造者角色。具体建造者角色是做具体建造工作的，但却不为客户端所知。客户端负责创建指导者和具体建造者对象。然后，客户把具体建造者对象交给指导者。客户一声令下，指导者操纵建造者开始创建产品。当产品创建完成后，建造者把产品返还给客户端。
    优点：建造者模式的使用使得产品的内部表象可以独立的变化。使用建造者模式可以使客户端不必知道产品内部组成的细节。 每一个Builder都相对独立，而与其它的Builder无关。 模式所建造的最终产品更易于控制。
    应用场景：需要生成的产品对象有复杂的内部结构。 需要生成的产品对象的属性相互依赖，建造者模式可以强迫生成顺序。 ?在对象创建过程中会使用到系统中的一些其它对象，这些对象在产品对象的创建过程中不易得到。 